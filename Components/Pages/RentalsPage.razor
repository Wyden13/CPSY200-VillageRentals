@page "/rentals"
@using VillageRentalManagementSystem.Models
@using VillageRentalManagementSystem.Services
@inject RentalService rentalService
@inject RentalItemService rentalItemService

<h3>Manage Rentals</h3>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-success">@message</div>
}

<table class="table table-hover">
    <thead>
        <tr>
            <th>Rental ID</th>
            <th>Customer Name</th>
            <th>Total Cost</th>
            <th>Rental Date</th>
            <th>Expected Return</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (rentalList.Any())
        {
            @foreach (var rental in rentalList)
            {
                <tr>
                    <td>@rental.Id</td>
                    <td>@rental.customer.FirstName @rental.customer.LastName</td>
                    <td>@rental.TotalCost.ToString("C")</td>
                    <td>@rental.RentalDate.ToShortDateString()</td>
                    <td>@rental.ExpectedReturnDate.ToShortDateString()</td>
                    <td>
                        <button class="btn btn-secondary" @onclick="() => OpenReturnModal(rental.Id)">Process Return</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="6" class="text-center">No active rentals found.</td></tr>
        }
    </tbody>
</table>

<!-- Return Items Modal -->
@if (showReturnModal)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Return Items for Rental #@selectedRentalId</h5>
                    <button type="button" class="btn-close" @onclick="CloseReturnModal"></button>
                </div>
                <div class="modal-body">
                    @if (itemsToReturn.Any())
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Equipment Name</th>
                                    <th>Status</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in itemsToReturn)
                                {
                                    <tr>
                                        <td>@item.equipment.Name</td>
                                        <td>
                                            @if (item.IsReturned)
                                            {
                                                <span class="badge bg-success">Returned on @item.ActualReturnDate?.ToShortDateString()</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning text-dark">Out</span>
                                            }
                                        </td>
                                        <td>
                                            <button class="btn btn-primary btn-sm" disabled="@item.IsReturned" @onclick="() => ReturnItem(item.Id, item.equipment.Id)">
                                                Return Item
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>Loading items...</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseReturnModal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop show"></div>
}


@code {
    private List<Rental> rentalList = new();
    private List<RentalItem> itemsToReturn = new();
    private bool showReturnModal = false;
    private int selectedRentalId;
    private string message = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadRentals();
    }

    private async Task LoadRentals()
    {
        rentalList = await rentalService.GetAllRentalAsync();
    }

    private async Task OpenReturnModal(int rentalId)
    {
        selectedRentalId = rentalId;
        itemsToReturn = await rentalItemService.GetRentalItemsAsync(rentalId);
        showReturnModal = true;
    }

    private void CloseReturnModal()
    {
        showReturnModal = false;
        itemsToReturn.Clear();
    }

    private async Task ReturnItem(int rentalItemId, int equipmentId)
    {
        bool success = await rentalItemService.ReturnRentalItemAsync(rentalItemId, equipmentId);
        if (success)
        {
            // Refresh the list of items in the modal to show the change
            itemsToReturn = await rentalItemService.GetRentalItemsAsync(selectedRentalId);
            message = "Item returned successfully!";

            // If all items for this rental have been returned, refresh the main rental list
            if (itemsToReturn.All(item => item.IsReturned))
            {
                CloseReturnModal();
                await LoadRentals(); // This will remove the fully returned rental from the page
            }
        }
        else
        {
            message = "Error returning item.";
        }
    }
}
